animation

: transition 속성과 달리 별도의 동작구문 없이도 스스로
애니메이션 효과를 발생시키는 css속성

@keyframes 원하는이름{
        %값{css속성}
}

선택자 : {animation:keyframes에 적어준원하는이름 시간s}
--------------------------------------------------------------
animation-iteration-count:원하는 값
: 입력한 값만큼 애니메이션을 반복시켜주는 css속성
infinite를 적어주면 무한하게 반복된다.
----------------------------------------
@keyframes 원하는이름{
        0%{css속성} (시간이 10초일 경우 처음에 이동할 때 0초 돌아올때 10초)
        50%{css속성} (시간이 10초일 경우 처음에 이동할 때 5초 돌아올때 5초)
        80%{css속성} (시간이 10초일 경우 처음에 이동할 때 8초 돌아올때 2초)
        100%{css속성} (시간이 10초일 경우 처음에 이동할 때 10초 돌아올때 0초)
}
-----------------------------------------------
animation-delay:?s
입력해준 시간값만큼 시간이 흐른 다음에 애니메이션이 실행된다
transition-delay와 동일하다.
-----------------------------------------------
animation-timing-function:
애니메이션 효과를 변경해주는 css속성
transition과 동일하다
-----------------------------------------------
animation-fill-mode:backwards
대상 태그의 animation 효과를 이미 적용시켜준 상태에서 시작해주는 구문
animaiton-delay 구문과 0% 함께 보통 많이 사용한다.

animation-fill-mode:forwards
animation 구문에 작성해준 css속성들은 일시적으로 적용이 되었다가 태그 본연의
모습으로 돌아오는데 forwards라는 css속성을 사용해주면 animation 구문이 적용이 된 상태로 끝까지 유지가 된다